name: Run Tests

on:
  push:
    branches:
      - '*'
  pull_request:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        # powershell on windows + strawberry perl
        # msys2 {0} on windows + msys2
        shell: >-
          ${{ fromJSON( '["", "powershell {0}"]' )[ startsWith(matrix.os, 'windows-') && matrix.dist == 'strawberry'     ]
          }}${{ fromJSON( '["", "msys2 {0}"]'      )[ startsWith(matrix.os, 'windows-') && matrix.dist == 'msys2'        ] }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        perl-version: ['5.34']
        include:
          - { perl-version: '5.34' , os: windows-latest , dist: strawberry }
          - { perl-version: '5.34' , os: windows-latest , dist: msys2 }
    name: Perl ${{ matrix.perl-version }} on ${{ matrix.os }} with dist ${{ matrix.dist }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Setup system
      - name: Set up MSYS2
        uses: msys2/setup-msys2@v2
        if: runner.os == 'Windows' && matrix.dist == 'msys2'
        with:
          update: true
          install: >-
            base-devel
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-perl
      - name: Set up LibGD (MSYS2/MinGW pacman)
        if: runner.os == 'Windows' && matrix.dist == 'msys2'
        shell: msys2 {0}
        run: |
          pacman -S --needed --noconfirm mingw-w64-x86_64-libgd
      # Setup Perl
      - name: Set up perl (Strawberry)
        uses: shogo82148/actions-setup-perl@v1
        if: matrix.os == 'windows-latest' && matrix.dist == 'strawberry'
        with:
          distribution: 'strawberry'
      - run: perl -V
      - name: Install cpanm
        if: runner.os == 'Windows' && matrix.dist == 'msys2'
        run:
          yes | cpan -T App::cpanminus || true
      - name: Install Perl deps
        run: |
          cpanm --notest GD POSIX Config::Tiny Geo::ShapeFile Archive::Zip
